{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\MainProject\\\\1312-main\\\\src\\\\components\\\\checkout.js\";\nimport axios from 'axios';\nimport React from \"react\";\nimport StripeCheckout from 'react-stripe-checkout';\nimport './Checkout.css';\nimport backgroundImage from \"./cool-background.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Checkout extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      game: null\n    };\n\n    this.onToken = token => {\n      // Send the token to your server to process the payment\n      fetch('/api/payment', {\n        method: 'POST',\n        body: JSON.stringify(token)\n      }).then(response => {\n        // Show a success message to the user\n        console.log('Payment successful!');\n      }).catch(error => {\n        // Show an error message to the user\n        console.error('Payment failed:', error);\n      });\n    };\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  //Get the game info from the server\n  componentDidMount() {\n    axios.get('http://localhost:4000/api/selected-game').then(response => {\n      this.setState({\n        game: response.data\n      });\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  render() {\n    const {\n      game\n    } = this.state;\n\n    if (!game) {\n      //If no game is selected display this message\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: `url(${backgroundImage}) no-repeat center center`,\n          backgroundSize: \"cover\",\n          height: \"100vh\"\n        },\n        children: \"There is nothing in your basket, go add some games\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: `url(${backgroundImage}) no-repeat center center`,\n        backgroundSize: \"cover\",\n        height: \"100vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Checkout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Selected Game:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Title: \", game.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", game.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: $\", game.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StripeCheckout //Stripe checkout implemented - it requires a key in order to autheticate the purchase, i didnt bother to get a key as its there just for show really\n        //Once you click pay with card an error will popup but then the checkout window will aslo pop up allowing the user to checkout\n        , {\n          name: \"\",\n          description: game.title,\n          amount: game.price * 100,\n          token: this.onToken,\n          stripeKey: process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY,\n          billingAddress: true,\n          shippingAddress: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["axios","React","StripeCheckout","backgroundImage","Checkout","Component","constructor","state","game","onToken","token","fetch","method","body","JSON","stringify","then","response","console","log","catch","error","componentDidMount","bind","get","setState","data","render","background","backgroundSize","height","title","description","price","process","env","REACT_APP_STRIPE_PUBLISHABLE_KEY"],"sources":["C:/Users/User/Desktop/MainProject/1312-main/src/components/checkout.js"],"sourcesContent":["import axios from 'axios';\r\nimport React from \"react\";\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport './Checkout.css';\r\nimport backgroundImage from \"./cool-background.png\";\r\n\r\n\r\nexport class Checkout extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.componentDidMount = this.componentDidMount.bind(this);\r\n  }\r\n  state = {\r\n    game: null\r\n  };\r\n\r\n  //Part of the stripe checkout this probably doesnt work as i dont think it can authethicate anything i just implemented it bcs the checkoout screen  looks nice\r\n  onToken = (token) => {\r\n    // Send the token to your server to process the payment\r\n    fetch('/api/payment', {\r\n      method: 'POST',\r\n      body: JSON.stringify(token),\r\n    }).then(response => {\r\n      // Show a success message to the user\r\n      console.log('Payment successful!');\r\n    }).catch(error => {\r\n      // Show an error message to the user\r\n      console.error('Payment failed:', error);\r\n    });\r\n  }\r\n  //Get the game info from the server\r\n  componentDidMount() {\r\n    axios.get('http://localhost:4000/api/selected-game')\r\n      .then(response => {\r\n        this.setState({ game: response.data });\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { game } = this.state;\r\n    if (!game) {\r\n      //If no game is selected display this message\r\n      return <div style={{ background: `url(${backgroundImage}) no-repeat center center`, backgroundSize: \"cover\", height: \"100vh\" }}>There is nothing in your basket, go add some games\r\n      </div>;\r\n\r\n    }\r\n    return (\r\n      <div style={{ background: `url(${backgroundImage}) no-repeat center center`, backgroundSize: \"cover\", height: \"100vh\" }}>\r\n        <div>\r\n          <h1>Checkout</h1>\r\n          <div>\r\n            <h2>Selected Game:</h2>\r\n            <p>Title: {game.title}</p>\r\n            <p>Description: {game.description}</p>\r\n            <p>Price: ${game.price}</p>\r\n          </div>\r\n\r\n          <StripeCheckout //Stripe checkout implemented - it requires a key in order to autheticate the purchase, i didnt bother to get a key as its there just for show really\r\n                          //Once you click pay with card an error will popup but then the checkout window will aslo pop up allowing the user to checkout\r\n            name=\"\"\r\n            description={game.title}\r\n            amount={game.price * 100}\r\n            token={this.onToken}\r\n            stripeKey={process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY}\r\n            billingAddress\r\n            shippingAddress\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAO,gBAAP;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAGA,OAAO,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;EAC5CC,WAAW,GAAG;IACZ;IADY,KAIdC,KAJc,GAIN;MACNC,IAAI,EAAE;IADA,CAJM;;IAAA,KASdC,OATc,GASHC,KAAD,IAAW;MACnB;MACAC,KAAK,CAAC,cAAD,EAAiB;QACpBC,MAAM,EAAE,MADY;QAEpBC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,KAAf;MAFc,CAAjB,CAAL,CAGGM,IAHH,CAGQC,QAAQ,IAAI;QAClB;QACAC,OAAO,CAACC,GAAR,CAAY,qBAAZ;MACD,CAND,EAMGC,KANH,CAMSC,KAAK,IAAI;QAChB;QACAH,OAAO,CAACG,KAAR,CAAc,iBAAd,EAAiCA,KAAjC;MACD,CATD;IAUD,CArBa;;IAEZ,KAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;EACD;;EAmBD;EACAD,iBAAiB,GAAG;IAClBtB,KAAK,CAACwB,GAAN,CAAU,yCAAV,EACGR,IADH,CACQC,QAAQ,IAAI;MAChB,KAAKQ,QAAL,CAAc;QAAEjB,IAAI,EAAES,QAAQ,CAACS;MAAjB,CAAd;IACD,CAHH,EAIGN,KAJH,CAISC,KAAK,IAAI;MACdH,OAAO,CAACG,KAAR,CAAcA,KAAd;IACD,CANH;EAOD;;EAGDM,MAAM,GAAG;IACP,MAAM;MAAEnB;IAAF,IAAW,KAAKD,KAAtB;;IACA,IAAI,CAACC,IAAL,EAAW;MACT;MACA,oBAAO;QAAK,KAAK,EAAE;UAAEoB,UAAU,EAAG,OAAMzB,eAAgB,2BAArC;UAAiE0B,cAAc,EAAE,OAAjF;UAA0FC,MAAM,EAAE;QAAlG,CAAZ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAP;IAGD;;IACD,oBACE;MAAK,KAAK,EAAE;QAAEF,UAAU,EAAG,OAAMzB,eAAgB,2BAArC;QAAiE0B,cAAc,EAAE,OAAjF;QAA0FC,MAAM,EAAE;MAAlG,CAAZ;MAAA,uBACE;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA,sBAAWtB,IAAI,CAACuB,KAAhB;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAA,4BAAiBvB,IAAI,CAACwB,WAAtB;UAAA;YAAA;YAAA;YAAA;UAAA,QAHF,eAIE;YAAA,uBAAYxB,IAAI,CAACyB,KAAjB;UAAA;YAAA;YAAA;YAAA;UAAA,QAJF;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eASE,QAAC,cAAD,CAAgB;QACA;QADhB;UAEE,IAAI,EAAC,EAFP;UAGE,WAAW,EAAEzB,IAAI,CAACuB,KAHpB;UAIE,MAAM,EAAEvB,IAAI,CAACyB,KAAL,GAAa,GAJvB;UAKE,KAAK,EAAE,KAAKxB,OALd;UAME,SAAS,EAAEyB,OAAO,CAACC,GAAR,CAAYC,gCANzB;UAOE,cAAc,MAPhB;UAQE,eAAe;QARjB;UAAA;UAAA;UAAA;QAAA,QATF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAwBD;;AAnE2C"},"metadata":{},"sourceType":"module"}