{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\MainProject\\\\1312-main\\\\src\\\\components\\\\read.js\";\nimport React from \"react\";\nimport { Games } from \"./games\";\nimport axios from \"axios\";\nimport backgroundImage from \"./cool-background.png\";\nimport \"./GameItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Read extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      games: [] // update the initial state to an empty array of games\n\n    };\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleBid = this.handleBid.bind(this);\n    this.handleBuyNow = this.handleBuyNow.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/api/games') // update the URL to retrieve games\n    .then(response => {\n      this.setState({\n        games: response.data\n      }); // update the state key to store games\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  handleBid(e, gameId, currentPrice) {\n    e.preventDefault();\n    const input = e.target.parentNode.querySelector('input');\n\n    if (input) {\n      const bidAmount = input.value;\n      axios.post(`http://localhost:4000/api/game/${gameId}/bid`, {\n        bidAmount\n      }).then(res => {\n        // Update the starting price of the game on the client side\n        const updatedGames = this.state.games.map(game => {\n          if (game._id === gameId) {\n            game.startingPrice = res.data.startingPrice;\n          }\n\n          return game;\n        });\n        this.setState({\n          games: updatedGames\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  handleBuyNow(e, gameId, price) {// handle buying a game now here\n    // you may want to use the gameId and price to make a request to the server\n    // to purchase the game\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: `url(${backgroundImage}) no-repeat center center`,\n        backgroundSize: \"cover\",\n        height: \"100vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Welcome to the auction house here is out selection of games you can buy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Games, {\n        games: this.state.games,\n        Reload: this.componentDidMount,\n        handleBid: this.handleBid,\n        handleBuyNow: this.handleBuyNow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Games","axios","backgroundImage","Read","Component","constructor","state","games","componentDidMount","bind","handleBid","handleBuyNow","get","then","response","setState","data","catch","error","console","log","e","gameId","currentPrice","preventDefault","input","target","parentNode","querySelector","bidAmount","value","post","res","updatedGames","map","game","_id","startingPrice","price","render","background","backgroundSize","height"],"sources":["C:/Users/User/Desktop/MainProject/1312-main/src/components/read.js"],"sourcesContent":["import React from \"react\";\nimport { Games } from \"./games\";  \nimport axios from \"axios\";\nimport backgroundImage from \"./cool-background.png\";\nimport \"./GameItem.css\";\n\n\nexport class Read extends React.Component {\n    constructor() {\n        super();\n        this.componentDidMount = this.componentDidMount.bind(this);\n        this.handleBid = this.handleBid.bind(this);\n        this.handleBuyNow = this.handleBuyNow.bind(this);\n    }\n   \n    componentDidMount() {\n        axios.get('http://localhost:4000/api/games')  // update the URL to retrieve games\n            .then((response) => {\n                this.setState({ games: response.data })  // update the state key to store games\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    }\n\n    handleBid(e, gameId, currentPrice) {\n        e.preventDefault();\n        const input = e.target.parentNode.querySelector('input');\n        if (input) {\n          const bidAmount = input.value;\n          axios.post(`http://localhost:4000/api/game/${gameId}/bid`, { bidAmount })\n            .then((res) => {\n              // Update the starting price of the game on the client side\n              const updatedGames = this.state.games.map(game => {\n                if (game._id === gameId) {\n                  game.startingPrice = res.data.startingPrice;\n                }\n                return game;\n              });\n              this.setState({ games: updatedGames });\n            })\n            .catch((error) => {\n              console.log(error);\n            });\n        }\n      }\n      \n      \n      \n    \n\n    handleBuyNow(e, gameId, price) {\n        // handle buying a game now here\n        // you may want to use the gameId and price to make a request to the server\n        // to purchase the game\n    }\n\n    state = {\n        games: []  // update the initial state to an empty array of games\n    }\n\n    render() {\n        return (\n            <div style={{ background: `url(${backgroundImage}) no-repeat center center`, backgroundSize: \"cover\", height: \"100vh\" }}>\n                <h3>Welcome to the auction house here is out selection of games you can buy</h3>\n                <Games games={this.state.games} Reload={this.componentDidMount} handleBid={this.handleBid} handleBuyNow={this.handleBuyNow}></Games>  \n            </div>\n        );\n        }\n    }\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAO,gBAAP;;AAGA,OAAO,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;EACtCC,WAAW,GAAG;IACV;IADU,KAiDdC,KAjDc,GAiDN;MACJC,KAAK,EAAE,EADH,CACO;;IADP,CAjDM;IAEV,KAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;IACA,KAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;IACA,KAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;EACH;;EAEDD,iBAAiB,GAAG;IAChBP,KAAK,CAACW,GAAN,CAAU,iCAAV,EAA8C;IAA9C,CACKC,IADL,CACWC,QAAD,IAAc;MAChB,KAAKC,QAAL,CAAc;QAAER,KAAK,EAAEO,QAAQ,CAACE;MAAlB,CAAd,EADgB,CACyB;IAC5C,CAHL,EAIKC,KAJL,CAIYC,KAAD,IAAW;MACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACH,CANL;EAOH;;EAEDR,SAAS,CAACW,CAAD,EAAIC,MAAJ,EAAYC,YAAZ,EAA0B;IAC/BF,CAAC,CAACG,cAAF;IACA,MAAMC,KAAK,GAAGJ,CAAC,CAACK,MAAF,CAASC,UAAT,CAAoBC,aAApB,CAAkC,OAAlC,CAAd;;IACA,IAAIH,KAAJ,EAAW;MACT,MAAMI,SAAS,GAAGJ,KAAK,CAACK,KAAxB;MACA7B,KAAK,CAAC8B,IAAN,CAAY,kCAAiCT,MAAO,MAApD,EAA2D;QAAEO;MAAF,CAA3D,EACGhB,IADH,CACSmB,GAAD,IAAS;QACb;QACA,MAAMC,YAAY,GAAG,KAAK3B,KAAL,CAAWC,KAAX,CAAiB2B,GAAjB,CAAqBC,IAAI,IAAI;UAChD,IAAIA,IAAI,CAACC,GAAL,KAAad,MAAjB,EAAyB;YACvBa,IAAI,CAACE,aAAL,GAAqBL,GAAG,CAAChB,IAAJ,CAASqB,aAA9B;UACD;;UACD,OAAOF,IAAP;QACD,CALoB,CAArB;QAMA,KAAKpB,QAAL,CAAc;UAAER,KAAK,EAAE0B;QAAT,CAAd;MACD,CAVH,EAWGhB,KAXH,CAWUC,KAAD,IAAW;QAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACD,CAbH;IAcD;EACF;;EAMHP,YAAY,CAACU,CAAD,EAAIC,MAAJ,EAAYgB,KAAZ,EAAmB,CAC3B;IACA;IACA;EACH;;EAMDC,MAAM,GAAG;IACL,oBACI;MAAK,KAAK,EAAE;QAAEC,UAAU,EAAG,OAAMtC,eAAgB,2BAArC;QAAiEuC,cAAc,EAAE,OAAjF;QAA0FC,MAAM,EAAE;MAAlG,CAAZ;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,KAAD;QAAO,KAAK,EAAE,KAAKpC,KAAL,CAAWC,KAAzB;QAAgC,MAAM,EAAE,KAAKC,iBAA7C;QAAgE,SAAS,EAAE,KAAKE,SAAhF;QAA2F,YAAY,EAAE,KAAKC;MAA9G;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAMC;;AA7DiC"},"metadata":{},"sourceType":"module"}